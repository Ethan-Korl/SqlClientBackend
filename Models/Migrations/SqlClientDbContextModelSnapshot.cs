// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqlClientBackend.Models;

#nullable disable

namespace SqlClientBackend.Models.Migrations
{
    [DbContext(typeof(SqlClientDbContext))]
    partial class SqlClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("SqlClientBackend.Models.ConnectedDb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("database_user")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("host")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("port")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("connected_dbs");
                });

            modelBuilder.Entity("SqlClientBackend.Models.EmailCode", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("email_codes");
                });

            modelBuilder.Entity("SqlClientBackend.Models.QueryHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("databaseid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("query_at")
                        .HasColumnType("TEXT");

                    b.Property<int>("query_byid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("databaseid");

                    b.HasIndex("query_byid");

                    b.ToTable("query_history");
                });

            modelBuilder.Entity("SqlClientBackend.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date_created")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SqlClientBackend.Models.QueryHistory", b =>
                {
                    b.HasOne("SqlClientBackend.Models.ConnectedDb", "database")
                        .WithMany()
                        .HasForeignKey("databaseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SqlClientBackend.Models.User", "query_by")
                        .WithMany()
                        .HasForeignKey("query_byid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("database");

                    b.Navigation("query_by");
                });
#pragma warning restore 612, 618
        }
    }
}
